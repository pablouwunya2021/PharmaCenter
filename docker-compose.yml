version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: pharma_user
      POSTGRES_PASSWORD: pharma_password123
      POSTGRES_DB: pharmacenter_db
    ports:
      - "5433:5432"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - pharmanetwork

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: pharmacenter_api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Variables para Docker (sobreescriben el .env)
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: pharma_user
      DB_PASSWORD: pharma_password123
      DB_NAME: pharmacenter_db
      JWT_SECRET: equipopharmacenter2024
      NODE_ENV: development
      # Variables de email desde .env del backend
      EMAIL_USER: ${EMAIL_USER:-notipharmacenter@gmail.com}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      ALERT_RECIPIENTS: ${ALERT_RECIPIENTS}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pharmanetwork

  frontend:
    build:
      context: ./pharmacenter
      dockerfile: Dockerfile
    container_name: pharmacenter_frontend
    restart: unless-stopped
    ports:
      - "8081:80"
    depends_on:
      - backend
    networks:
      - pharmanetwork

networks:
  pharmanetwork:
    driver: bridge

volumes:
  postgres_data:
    driver: local